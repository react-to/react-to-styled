name: release

on:
  push:
    branches:
      - main
      - develop

jobs:
  release:
    if: |
      ${{ github.event.head_commit.message }} != 'chore(release): Release'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      #
      # Checkout the repository.
      #
      - uses: actions/checkout@v2
        id: checkout
        with:
          token: ${{ secrets.GH_SECRET }}

      #
      # Wait for tests
      #
      - name: Wait for app build to succeed
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-app-build
        with:
          token: ${{ secrets.GH_SECRET }}
          checkName: tests
          timeoutSeconds: 1000
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      #
      # Set git identity to be a bot
      #
      - name: Cache
        uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            node_modules/
            .eslintcache
            **/.cache
            packages/**/node_modules/
          key: ${{ github.ref }}-styled-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ github.ref }}-styled-

      #
      # Set git identity to be a bot
      #
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '42103905+github-actions[bot]@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
          GITHUB_ACTOR: ${{ github.actor }}

      #
      # Setup .npmrc file to publish to npm
      #
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
          token: ${{ secrets.NPM_TOKEN }}

      #
      # Publish release with lerna if not already published
      #
      - name: Create Release
        if: ${{ github.ref == 'refs/heads/main' }}
        run: lerna publish --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      #
      # Publish a prerelease with lerna if not already published
      #
      - name: Create prerelease
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: lerna publish --yes --conventional-prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
